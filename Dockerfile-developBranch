# NOTE: This docker container is built automatically
#       from Travis-CI after passing unit tests

FROM minidocks/python:3.10

ARG version=59.0

# Update apt-get
RUN apk update -qq

RUN apk add -u cairo cairo-gobject pango gcc libc-dev python3-dev npm gdk-pixbuf py3-brotli py3-lxml py3-cffi py3-pillow msttcorefonts-installer fontconfig zopfli \
    && update-ms-fonts && fc-cache -f && clean

ADD rootfs /

COPY . /code
WORKDIR /code

# Upgrade pip3 and install the requirements
RUN pip install --upgrade pip
RUN pip install -U pip setuptools wheel ruamel.yaml.clib==0.2.6
RUN pip install --requirement requirements.txt && clean

# Install the npm modules we use for generating some Bible content in JSON format
RUN cd converters/pdf/resources && npm ci
RUN cd converters/add_gl_quotes_to_tsv && npm ci

ENV WORKER_NAME "worker-1"

CMD rq worker --config rq_settings --name $WORKER_NAME

# Define environment variables
# NOTE: The following environment variables are optional:
#	REDIS_URL (can be omitted for testing to use a local instance)
#	DEBUG_MODE (can be set to any non-blank string to run in debug mode for testing)
#	GRAPHITE_HOSTNAME (defaults to localhost if missing)
#	QUEUE_PREFIX (defaults to '', set to dev- for testing)


# NOTE: To build use:
#           docker build --file Dockerfile-developBranch --tag unfoldingword/tx_job_handler:develop .


#       To test (assuming that the confidential environment variables are already set in the current environment) use:
#           docker run --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env QUEUE_PREFIX=dev- --env DEBUG_MODE=True --net="host" --name tx_job_handler --rm tx_job_handler:develop


#       To run in production use with the desired values:
#           docker run --env AWS_ACCESS_KEY_ID=<access_key> --env AWS_SECRET_ACCESS_KEY=<sa_key> --env GRAPHITE_HOSTNAME=<graphite_hostname> --env REDIS_URL=<redis_url> --net="host" --name tx_job_handler --detach --rm tx_job_handler:develop
